{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shopSagas\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","fetchCollectionsStart","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACD;;AAED,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shopSagas\";\n\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}