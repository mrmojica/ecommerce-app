{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../Firebase/utils\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shopActions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n} //   collectionRef\n//     .get()\n//     .then((snapshot) => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionSuccess(collectionsMap));\n//       this.setState({ loading: false });\n//     })\n//     .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n// }\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/redux/shop/shopSagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,sBAHP;AAIA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,eAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BG,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbK,eAAe,CAACY,uBADH,EAEbT,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../Firebase/utils\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shopActions\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\n\n//   collectionRef\n//     .get()\n//     .then((snapshot) => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionSuccess(collectionsMap));\n//       this.setState({ loading: false });\n//     })\n//     .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n// }\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}