{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/pages/Shop/Shop.js\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../Firebase/utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections, fetchCollectionsStartAsync } from \"../../redux/shop/shopActions\";\nimport WithSpinner from \"../../containers/WithSpinner/WithSpinner\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shopSelectors\";\nimport { createStructuredSelector } from \"reselect\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    fetchCollectionsStartAsync;\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/pages/Shop/Shop.js"],"names":["React","CollectionsOverview","Route","Collection","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","fetchCollectionsStartAsync","WithSpinner","selectIsCollectionFetching","createStructuredSelector","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","componentDidMount","render","match","props","loading","state","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,sBAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,iBADF,EAEEC,0BAFF,QAGO,8BAHP;AAIA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACR,mBAAD,CAAjD;AACA,MAAMY,yBAAyB,GAAGJ,WAAW,CAACN,UAAD,CAA7C;;AAEA,MAAMW,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,0BAA0B;AAC3B;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,0CACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEH,KAAK,CAACI,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGH,KAAD,IACN,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEC;AAA1C,SAAuDD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGH,KAAD,IACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEC;AAAtC,SAAmDD,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAzBgC;;AA4BnC,MAAMI,eAAe,GAAGZ,wBAAwB,CAAC;AAC/Ca,EAAAA,oBAAoB,EAAEd;AADyB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe,EAAf,CAA3B;;AAEA,eAAepB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../Firebase/utils\";\nimport { connect } from \"react-redux\";\nimport {\n  updateCollections,\n  fetchCollectionsStartAsync\n} from \"../../redux/shop/shopActions\";\nimport WithSpinner from \"../../containers/WithSpinner/WithSpinner\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shopSelectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    fetchCollectionsStartAsync;\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}