{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/pages/Shop/Shop.js\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../Firebase/utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shopActions\";\nimport WithSpinner from \"../../containers/WithSpinner/WithSpinner\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubScribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubScribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/pages/Shop/Shop.js"],"names":["React","CollectionsOverview","Route","Collection","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","state","loading","unsubScribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,sBAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,mBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,UAAD,CAA7C;;AAEA,MAAMQ,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,OAAO,EAAE;AADH,KADyB;AAAA,SAKjCC,uBALiC,GAKP,IALO;AAAA;;AAOjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAC7B,MAAOC,QAAP,IAAoB;AAClB,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAL4B,CAA/B;AAOD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,WACE,0CACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEzB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEwB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEvB,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5BgC;;AA+BnC,MAAMwB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGe,cAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../Firebase/utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shopActions\";\nimport WithSpinner from \"../../containers/WithSpinner/WithSpinner\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubScribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubScribeFromSnapshot = collectionRef.onSnapshot(\n      async (snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={Collection} />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}