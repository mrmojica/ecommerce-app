{"ast":null,"code":"import ShopActionTypes from \"./shopTypes\";\nimport { firestore } from \"firebase\";\nimport { convertCollectionsSnapshotToMap } from \"../../Firebase/utils\";\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/redux/shop/shopActions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTIONS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,+BAAT,QAAgD,sBAAhD;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AACpDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,kBAD8B;AAEpDC,EAAAA,OAAO,EAAEH;AAF2C,CAArB,CAA1B;AAKP,OAAO,MAAMI,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMV,cAAc,GAAGF,+BAA+B,CAACY,QAAD,CAAtD;AACAX,MAAAA,iBAAiB,CAACC,cAAD,CAAjB;AACA,WAAKW,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from \"./shopTypes\";\nimport { firestore } from \"firebase\";\nimport { convertCollectionsSnapshotToMap } from \"../../Firebase/utils\";\n\nexport const updateCollections = (collectionsMap) => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}