{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/components/CollectionItem/CollectionItem.js\";\nimport React from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport { CollectionItemContainer, CollectionFooterContainer, AddButton, BackgroundImage, NameContainer, PriceContainer } from \"./CollectionItemStyles.js\";\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const {\n    name,\n    price,\n    imageUrl\n  } = item;\n  return React.createElement(CollectionItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(BackgroundImage, {\n    className: \"image\",\n    imageUrl: imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CollectionFooterContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(NameContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, name), React.createElement(PriceContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, price)), React.createElement(AddButton, {\n    inverted: true,\n    onClick: () => addItem(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add TO CART\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/michaelmojica/Desktop/WebDev2020/ecommerce/src/components/CollectionItem/CollectionItem.js"],"names":["React","CustomButton","connect","addItem","CollectionItemContainer","CollectionFooterContainer","AddButton","BackgroundImage","NameContainer","PriceContainer","CollectionItem","item","name","price","imageUrl","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SACEC,uBADF,EAEEC,yBAFF,EAGEC,SAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,cANF,QAOO,2BAPP;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQR,EAAAA;AAAR,CAAD,KAAuB;AAC5C,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BH,IAAlC;AAEA,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAEG,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,IAAhB,CADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,KAAjB,CAFF,CAFF,EAME,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAoB,IAAA,OAAO,EAAE,MAAMV,OAAO,CAACQ,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF;AAYD,CAfD;;AAiBA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,OAAO,EAAGQ,IAAD,IAAUK,QAAQ,CAACb,OAAO,CAACQ,IAAD,CAAR;AADa,CAAf,CAA3B;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCL,cAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer,\n} from \"./CollectionItemStyles.js\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton inverted onClick={() => addItem(item)}>\n        Add TO CART\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}